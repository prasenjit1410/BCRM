/**
 * [...]
 * Purpose :callout from SF to SertifiAPI to avoid manual filling of CC auth documents in sertifi for MS Team
 * @author  :Keerthi Gaddam
 * @version 1
 * @LastModifiedDate :7/28/2022
 * @Dependent classes: RequestBody
 *
 */

public with sharing class Callouts {
   
    public static void getAccessToken( String contractId ){
        
        
        Contract__c ctrobj = [ select Id,field 1, .....field2,...
                                          from Contract__c
                                          where Id = : contractid LIMIT 1 ];
      
      
        // call to get new access token
        HttpRequest request = new HttpRequest();
        request.setMethod( 'POST' );
        String reqbodyfortoken ;
        reqbodyfortoken = 'grant_type=client_credentials' ; 
        reqbodyfortoken += '&scope=SCOPE_NAME';
        request.setEndpoint('callout:ApiToken_Staging'  );
        request.setBody(reqbodyfortoken);
        request.setHeader( 'Content-Type', 'application/x-www-form-urlencoded') ;
        
        
        request.setTimeout(2000);
        
        Http http = new Http();
        HTTPResponse resp = http.send(request);
        System.debug( 'response of token is ' + resp.getStatusCode() + ' value is '  + resp.getBody() );
        
        responseToken respToken = (responseToken)JSON.deserialize(resp.getBody(), responseToken.class) ;
        getResponseBody( ctrobj, respToken.access_token );
    }
    
    public static void getResponseBody( Contract__c ctrobj, String accessToken ){
        String propertyid =  ctrobj.Property__r.Property_ID__c ;
        // Final call with access token to get actual response
        Http finalhttp = new Http();
        HttpRequest finalrequest = new HttpRequest();
        finalrequest.setMethod( 'POST' );
        finalrequest.setEndpoint(  'callout:Api_Staging' + '/'  + propertyid ) ;
        finalrequest.setHeader('Authorization', 'Bearer ' + accessToken );
        
        if( ctrobj != null ){           
            
            RequestBodyJSON rbj = new RequestBodyJSON();
            rbj.reqbody = rbj.prepareReqBody(ctrobj);
            
            System.debug(  'rbj.reqbody is '  + rbj.reqbody );
            finalrequest.setBody(rbj.reqbody ) ;
            finalrequest.setHeader( 'Content-Type', 'application/json' ) ;
            finalrequest.setHeader( 'Content-Length', '597' ) ;
            
            HTTPResponse finalresp = finalhttp.send(finalrequest);
            System.debug( 'final response of token is ' + finalresp.getStatusCode() + ' value is '  + finalresp.getBody() );
            
        }
        
    }
    
    public class ResponseToken{
        public String access_token;
    }
    
    
    public class RequestBodyJSON{
        public String reqbody;       
        
                          
        public String prepareReqBody( Contract__c ctrobj){

            String expDate = ctrobj.field1 ;
            
            Date checkInDate = ctrobj.field2 ;
            
            String[] expDates = expDate.split( '/' );
            
            DateTime expDateTime = DateTime.newInstance(  Integer.valueOf(expDates[1]), Integer.valueOf(expDates[0]), 25, 00, 00, 00)  ;
            
            Datetime arrivalDatetime = DateTime.newInstance(  checkInDate.year(), checkInDate.month(), checkInDate.day(), 00, 00, 00)  ;
            
            RequestBody RequestBodyObj = new RequestBody();
            
            // Card
            RequestBody.CardDetail  srtcard = new RequestBody.CardDetail();            
            srtcard.CardHolderName = 'Test_Name' ;
            srtcard.CardNumber = ctrobj.field3 ;
            srtcard.CardType = ctrobj.field3.startsWith('4') ? 'Visa' : 'Mastercard' ;
            srtcard.ExpirationDate = expDateTime ; //DateTime.newInstance( 2024, 08, 24, 00, 00, 00)  ;
            // assign card
            RequestBodyObj.Card = srtcard ;
            
            // Contact
            RequestBody.CompanyDetail  companyd = new RequestBody.CompanyDetail();
            companyd.Address = '950 S Cherry Street' ;
            companyd.Name =  'Test_Name' ;  
            RequestBodyObj.Company = companyd ;
            
            
            // Contact
            RequestBody.ContactDetail  contactd = new RequestBody.ContactDetail();
            
            contactd.PhoneNumber = '(855) 567-4683';
            contactd.EmailAddress = 'test@test.com';  
            contactd.InvoiceEmailAddress = 'test@test.com';
            contactd.SupportEmailAddress = '';  
            contactd.SupportPhoneNumber = '';
            
            RequestBodyObj.Contact = contactd ;
            
            
            // Traveler
            RequestBody.TravelerDetail  travelD = new RequestBody.TravelerDetail();
            travelD.FirstName = ctrobj.field4;
            travelD.LastName = ctrobj.field4;
            RequestBodyObj.Traveler = travelD ;
            
            // PaymentInstructions
            RequestBodyObj.PaymentInstructions = (ctrobj.field5 == true && ctrobj.field6 == 'SabreCSL' ) ? 	'Room, tax, and incidentals' : ( ctrobj.field5 == true ?  'Incidentals' : 'Room and tax only' )	;
                
            // ReferenceNumber
            RequestBodyObj.ReferenceNumber = ctrobj.field7;
            
            // ArrivalDate 
            RequestBodyObj.ArrivalDate =  arrivalDatetime  ;

            return JSON.serialize( RequestBodyObj ) ;
        }
        
    }
